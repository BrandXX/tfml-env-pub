---------------------------------------------------------------------------
### Step by Step guide to installing a Tensorflow 2 environment named tfml
---------------------------------------------------------------------------
#Set the Default user in /etc/wsl.conf
	#This must be done as root
sudo su
echo -e '# My TFML Environment \n[boot] \nsystemd=true \n \n[user] \ndefault=userx \n' > /etc/wsl.conf

#Restart Ubuntu
Exit Ubuntu then in PowerShell run the following
wsl --shutdown
wsl -d ubuntu-tfml

#Update/upgrade apt
sudo apt update && sudo apt upgrade

#Create folder structure in user directory
cd ~
mkdir {_admin,_temp,docs,downloads,env,projects,env/base,env/tfml}

#Download latest version of Miniconda
wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -P ~/downloads/

#Install Miniconda
bash ~/downloads/Miniconda3-latest-Linux-x86_64.sh

#Cleanup install files
rm ~/downloads/Miniconda3-latest-Linux-x86_64.sh

#Restart Ubuntu
Exit Ubuntu then in PowerShell run the following
wsl --shutdown
wsl -d ubuntu-tfml

#Update Conda
conda update conda

#Save the environments package info in 'env/base'
conda env export > ~/env/base/conda-env-export.yaml

#Create and activate tfml environment
wget https://github.com/BrandXX/tfml-env/blob/31d023b3365ab14fd686ad974b16f87200e06094/tfml/conda-env-export.yaml -P ~/env/tfml/
conda env create --file=env/tfml/conda-env-export.yaml
conda activate tfml

---------------------------------------------------------------------------
### Tensorflow 2 config
---------------------------------------------------------------------------
# Config Conda environment activation scripts and set GPU Lib env var
mkdir -p $CONDA_PREFIX/etc/conda/activate.d
echo 'CUDNN_PATH=$(dirname $(python -c "import nvidia.cudnn;print(nvidia.cudnn.__file__)"))' >> $CONDA_PREFIX/etc/conda/activate.d/env_vars.sh
echo 'export LD_LIBRARY_PATH=$CONDA_PREFIX/lib/:$CUDNN_PATH/lib:$LD_LIBRARY_PATH' >> $CONDA_PREFIX/etc/conda/activate.d/env_vars.sh
mkdir -p $CONDA_PREFIX/lib/nvvm/libdevice/
cp -p $CONDA_PREFIX/lib/libdevice.10.bc $CONDA_PREFIX/lib/nvvm/libdevice/
echo 'export XLA_FLAGS=--xla_gpu_cuda_data_dir=$CONDA_PREFIX/lib' >> $CONDA_PREFIX/etc/conda/activate.d/env_vars.sh
source $CONDA_PREFIX/etc/conda/activate.d/env_vars.sh

#Verify install:
python3 -c "import tensorflow as tf; print(tf.config.list_physical_devices('GPU'))"
<AND/OR>
#Additional verify test
python3 -c "import tensorflow.compat.v1 as tf; tf.test.is_gpu_available()"

#Additional verification test
python3 -c "import tensorflow.compat.v1 as tf; tf.enable_eager_execution(tf.ConfigProto(log_device_placement=True)); print(tf.add([1.0, 2.0], [3.0, 4.0]))"

#Save Package Lists for tfml environment
conda env export > ~/env/tfml/conda-env-export.yaml

---------------------------------------------------------------------------
### Install and configure VScode
---------------------------------------------------------------------------
VScode is synced

Name: Python Development Extensions Pack
URL: https://marketplace.visualstudio.com/items?itemName=demystifying-javascript.python-extensions-pack
Description: This extension pack packages some of the most popular and some of my favorite extensions needed for fullstack Python development or web development.
Extensions Included:

Name: Git Extension Pack
URL: https://marketplace.visualstudio.com/items?itemName=donjayamanne.git-extension-pack

---------------------------------------------------------------------------
### Backup the environment once done
---------------------------------------------------------------------------
wsl --export ubuntu-tfml ubuntu-tfml-00.tar

---------------------------------------------------------------------------
### Additional Config
---------------------------------------------------------------------------

# Set Global Git Username and Email
git config --global user.name "Your Name"
git config --global user.email "youremail@yourdomain.com"


# Confirm the Git config changes
git config --list

---------------------------------------------------------------------------
---------------------------------------------------------------------------
